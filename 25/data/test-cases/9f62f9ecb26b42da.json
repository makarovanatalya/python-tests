{"uid":"9f62f9ecb26b42da","name":"test_user_can_not_transfer_money_with_invalid_form[chromium-args0-Please fill all fields and confirm-False]","fullName":"src.main.ui.tests.transfer_money_ui_test.TestTransferMoney#test_user_can_not_transfer_money_with_invalid_form","historyId":"fe09a0a2db1ae39d488c25be1c62b068","time":{"start":1761515212625,"stop":1761515212625,"duration":0},"status":"broken","statusMessage":"requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"self = <Response [400]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Decodes the JSON response body (if any) as a Python object.\n    \n        This may return a dictionary, list, etc. depending on what is in the response.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:976: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/json/decoder.py:345: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fcc2b3faba0>\ns = 'Name must contain two words with letters only', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/json/decoder.py:363: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\napi_manager = <src.main.classes.api_manager.ApiManager object at 0x7fcc286541d0>\n\n    @pytest.fixture\n    def prepare_receiver(api_manager: ApiManager):\n        receiver_user = RandomModelGenerator.generate(CreateUserRequest)\n        api_manager.admin_steps.create_user(receiver_user)\n        receiver_user_steps = UserSteps(created_object=[]).set_user(receiver_user)\n>       receiver_user_steps.update_profile(ProfileRequest(name=RandomData.get_faker().name()))\n\nsrc/main/fixtures/user_fixtures.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/main/api/steps/user_steps.py:35: in wrapper\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/main/api/steps/user_steps.py:136: in update_profile\n    ).update(update_profile_request)\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/main/api/requests/skeleton/requester/validated_crud_requester.py:24: in update\n    return self.endpoint.value.response_model.model_validate(response.json())\n                                                             ^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Decodes the JSON response body (if any) as a Python object.\n    \n        This may return a dictionary, list, etc. depending on what is in the response.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:980: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1761515187411,"stop":1761515187411,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_session_faker","time":{"start":1761515187411,"stop":1761515187413,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1761515187411,"stop":1761515187411,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1761515187413,"stop":1761515187413,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1761515187413,"stop":1761515187413,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"healthcheck","time":{"start":1761515187413,"stop":1761515188527,"duration":1114},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_type_launch_args","time":{"start":1761515200026,"stop":1761515200026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright","time":{"start":1761515200026,"stop":1761515200325,"duration":299},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_type","time":{"start":1761515200326,"stop":1761515200326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"connect_options","time":{"start":1761515200326,"stop":1761515200326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"launch_browser","time":{"start":1761515200326,"stop":1761515200326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser","time":{"start":1761515200326,"stop":1761515202056,"duration":1730},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1761515202057,"stop":1761515202057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_context_args","time":{"start":1761515202057,"stop":1761515202057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_pw_artifacts_folder","time":{"start":1761515202057,"stop":1761515202057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser_context_args","time":{"start":1761515202058,"stop":1761515202058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"new_context","time":{"start":1761515212626,"stop":1761515212629,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"new_page","time":{"start":1761515212629,"stop":1761515212653,"duration":24},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_manager","time":{"start":1761515212653,"stop":1761515212653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"user_request","time":{"start":1761515212653,"stop":1761515212807,"duration":154},"status":"passed","steps":[{"name":"create_user","time":{"start":1761515212654,"stop":1761515212807,"duration":153},"status":"passed","steps":[{"name":"send_http_request","time":{"start":1761515212654,"stop":1761515212807,"duration":153},"status":"passed","steps":[],"attachments":[{"uid":"ff0330cad4225f62","name":"request.txt","source":"ff0330cad4225f62.attach","type":"text/plain","size":249}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"''"},{"name":"body","value":"{'username': 'TigsYZYrHHNg', 'password': 'QXBseoy778%&^', 'role': 'USER'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[{"name":"user_request","value":"CreateUserRequest(username='TigsYZYrHHNg', password='QXBseoy778%&^', role='USER')"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":1,"hasContent":true},{"name":"created_objects","time":{"start":1761515212653,"stop":1761515212653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"user_session","time":{"start":1761515212807,"stop":1761515212888,"duration":81},"status":"passed","steps":[{"name":"get_auth_token","time":{"start":1761515212807,"stop":1761515212885,"duration":78},"status":"passed","steps":[{"name":"send_http_request","time":{"start":1761515212808,"stop":1761515212885,"duration":77},"status":"passed","steps":[],"attachments":[{"uid":"7e7c794d11b6a89d","name":"request.txt","source":"7e7c794d11b6a89d.attach","type":"text/plain","size":124}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"''"},{"name":"body","value":"{'username': 'TigsYZYrHHNg', 'password': 'QXBseoy778%&^'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":1,"hasContent":true},{"name":"user_account","time":{"start":1761515212888,"stop":1761515212965,"duration":77},"status":"passed","steps":[{"name":"create_account","time":{"start":1761515212888,"stop":1761515212965,"duration":77},"status":"passed","steps":[{"name":"send_http_request","time":{"start":1761515212888,"stop":1761515212965,"duration":77},"status":"passed","steps":[],"attachments":[{"uid":"618b071d27c7d3f0","name":"request.txt","source":"618b071d27c7d3f0.attach","type":"text/plain","size":146}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"''"},{"name":"body","value":"{'username': 'TigsYZYrHHNg', 'password': 'QXBseoy778%&^'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":1,"hasContent":true},{"name":"user_account_with_money","time":{"start":1761515212965,"stop":1761515213044,"duration":79},"status":"passed","steps":[{"name":"deposit_money","time":{"start":1761515212965,"stop":1761515213044,"duration":79},"status":"passed","steps":[{"name":"send_http_request","time":{"start":1761515212965,"stop":1761515213043,"duration":78},"status":"passed","steps":[],"attachments":[{"uid":"1cd767cd0a21a248","name":"request.txt","source":"1cd767cd0a21a248.attach","type":"text/plain","size":236}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"''"},{"name":"body","value":"{'id': 23, 'balance': 5000.0}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[{"name":"account_id","value":"23"},{"name":"amount","value":"5000.0"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":1,"hasContent":true},{"name":"prepare_receiver","time":{"start":1761515213044,"stop":1761515213304,"duration":260},"status":"broken","statusMessage":"requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1196, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/_pytest/fixtures.py\", line 930, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/python-tests/python-tests/src/main/fixtures/user_fixtures.py\", line 33, in prepare_receiver\n    receiver_user_steps.update_profile(ProfileRequest(name=RandomData.get_faker().name()))\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-tests/python-tests/src/main/api/steps/user_steps.py\", line 35, in wrapper\n    return func(self, *args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/python-tests/python-tests/src/main/api/steps/user_steps.py\", line 136, in update_profile\n    ).update(update_profile_request)\n      ~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-tests/python-tests/src/main/api/requests/skeleton/requester/validated_crud_requester.py\", line 24, in update\n    return self.endpoint.value.response_model.model_validate(response.json())\n                                                             ~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py\", line 980, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n","steps":[{"name":"create_user","time":{"start":1761515213045,"stop":1761515213197,"duration":152},"status":"passed","steps":[{"name":"send_http_request","time":{"start":1761515213045,"stop":1761515213196,"duration":151},"status":"passed","steps":[],"attachments":[{"uid":"9be1cc96866c671e","name":"request.txt","source":"9be1cc96866c671e.attach","type":"text/plain","size":247}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"''"},{"name":"body","value":"{'username': 'RyKhLLoOzxx', 'password': 'EBNizto504&&+', 'role': 'USER'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[{"name":"user_request","value":"CreateUserRequest(username='RyKhLLoOzxx', password='EBNizto504&&+', role='USER')"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true},{"name":"update_profile","time":{"start":1761515213198,"stop":1761515213277,"duration":79},"status":"broken","statusMessage":"requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/python-tests/python-tests/src/main/api/steps/user_steps.py\", line 136, in update_profile\n    ).update(update_profile_request)\n      ~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-tests/python-tests/src/main/api/requests/skeleton/requester/validated_crud_requester.py\", line 24, in update\n    return self.endpoint.value.response_model.model_validate(response.json())\n                                                             ~~~~~~~~~~~~~^^\n  File \"/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py\", line 980, in json\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n","steps":[{"name":"send_http_request","time":{"start":1761515213198,"stop":1761515213277,"duration":79},"status":"passed","steps":[],"attachments":[{"uid":"8dfaf9776f051434","name":"request.txt","source":"8dfaf9776f051434.attach","type":"text/plain","size":106}],"parameters":[{"name":"method","value":"'PUT'"},{"name":"endpoint","value":"''"},{"name":"body","value":"{'name': 'Mrs. Kristen Perez'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[{"name":"update_profile_request","value":"ProfileRequest(name='Mrs. Kristen Perez')"}],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":2,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"self = <Response [400]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Decodes the JSON response body (if any) as a Python object.\n    \n        This may return a dictionary, list, etc. depending on what is in the response.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n>           return complexjson.loads(self.text, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:976: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/json/decoder.py:345: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fcc2b3faba0>\ns = 'Name must contain two words with letters only', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/json/decoder.py:363: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\napi_manager = <src.main.classes.api_manager.ApiManager object at 0x7fcc286541d0>\n\n    @pytest.fixture\n    def prepare_receiver(api_manager: ApiManager):\n        receiver_user = RandomModelGenerator.generate(CreateUserRequest)\n        api_manager.admin_steps.create_user(receiver_user)\n        receiver_user_steps = UserSteps(created_object=[]).set_user(receiver_user)\n>       receiver_user_steps.update_profile(ProfileRequest(name=RandomData.get_faker().name()))\n\nsrc/main/fixtures/user_fixtures.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/main/api/steps/user_steps.py:35: in wrapper\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/main/api/steps/user_steps.py:136: in update_profile\n    ).update(update_profile_request)\n      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsrc/main/api/requests/skeleton/requester/validated_crud_requester.py:24: in update\n    return self.endpoint.value.response_model.model_validate(response.json())\n                                                             ^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>, kwargs = {}\n\n    def json(self, **kwargs):\n        r\"\"\"Decodes the JSON response body (if any) as a Python object.\n    \n        This may return a dictionary, list, etc. depending on what is in the response.\n    \n        :param \\*\\*kwargs: Optional arguments that ``json.loads`` takes.\n        :raises requests.exceptions.JSONDecodeError: If the response body does not\n            contain valid json.\n        \"\"\"\n    \n        if not self.encoding and self.content and len(self.content) > 3:\n            # No encoding set. JSON RFC 4627 section 3 states we should expect\n            # UTF-8, -16 or -32. Detect which one to use; If the detection or\n            # decoding fails, fall back to `self.text` (using charset_normalizer to make\n            # a best guess).\n            encoding = guess_json_utf(self.content)\n            if encoding is not None:\n                try:\n                    return complexjson.loads(self.content.decode(encoding), **kwargs)\n                except UnicodeDecodeError:\n                    # Wrong UTF codec detected; usually because it's not UTF-8\n                    # but some other 8-bit codec.  This is an RFC violation,\n                    # and the server didn't bother to tell us what codec *was*\n                    # used.\n                    pass\n                except JSONDecodeError as e:\n                    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\n    \n        try:\n            return complexjson.loads(self.text, **kwargs)\n        except JSONDecodeError as e:\n            # Catch JSON-related errors and raise as requests.JSONDecodeError\n            # This aliases json.JSONDecodeError and simplejson.JSONDecodeError\n>           raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\nE           requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/requests/models.py:980: JSONDecodeError","steps":[],"attachments":[{"uid":"323c38bbabb2afd8","name":"log","source":"323c38bbabb2afd8.txt","type":"text/plain","size":1352}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"created_objects::0","time":{"start":1761515213372,"stop":1761515213529,"duration":157},"status":"passed","steps":[{"name":"delete_user","time":{"start":1761515213372,"stop":1761515213451,"duration":79},"status":"passed","steps":[{"name":"send_http_request","time":{"start":1761515213372,"stop":1761515213451,"duration":79},"status":"passed","steps":[],"attachments":[{"uid":"9a9d33aaf5454af6","name":"request.txt","source":"9a9d33aaf5454af6.attach","type":"text/plain","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/37'"},{"name":"body","value":"''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[{"name":"user_id","value":"37"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true},{"name":"delete_user","time":{"start":1761515213451,"stop":1761515213529,"duration":78},"status":"passed","steps":[{"name":"send_http_request","time":{"start":1761515213452,"stop":1761515213529,"duration":77},"status":"passed","steps":[],"attachments":[{"uid":"352974d5215b4d1a","name":"request.txt","source":"352974d5215b4d1a.attach","type":"text/plain","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/38'"},{"name":"body","value":"''"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[{"name":"user_id","value":"38"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":2,"hasContent":true},{"name":"new_page::0","time":{"start":1761515213530,"stop":1761515213530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_pw_artifacts_folder::0","time":{"start":1761515226875,"stop":1761515226876,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"browser::0","time":{"start":1761515226876,"stop":1761515226997,"duration":121},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"playwright::0","time":{"start":1761515226999,"stop":1761515227006,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"ui"},{"name":"parentSuite","value":"src.main.ui.tests"},{"name":"suite","value":"transfer_money_ui_test"},{"name":"subSuite","value":"TestTransferMoney"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"6509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.main.ui.tests.transfer_money_ui_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"args","value":"{'account_number': None}"},{"name":"browser_name","value":"'chromium'"},{"name":"context_manager","value":"False"},{"name":"message","value":"'Please fill all fields and confirm'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["ui"]},"source":"9f62f9ecb26b42da.json","parameterValues":["{'account_number': None}","'chromium'","False","'Please fill all fields and confirm'"]}